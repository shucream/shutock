version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.1.0
  aws-ecs: circleci/aws-ecs@0.0.8


jobs:

  build:
    - aws-ecr/build-and-push-image:
      name: build-test
      repo: $AWS_RESOURCE_NAME_PREFIX
      tag: $CONTAINER_IMAGE:test-$CIRCLE_SHA1

  test:
    docker:
      - image: $CONTAINER_IMAGE:test-$CIRCLE_SHA1
        environment:
          RAILS_ENV: test
          DATABASE_HOST: 127.0.0.1
          DATABASE_USER: root
          DATABASE_PASSWORD: root
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: root
    working_directory: $APP_ROOT
    steps:
      - checkout
      - run:
        name: Install dockerize
        command: |
          wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
          && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
          && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      - run:
        name: wait for db container
        command: dockerize -wait tcp://$DATABASE_HOST:3306 -timeout 1m
      - run:
        name: DB migrate
        command: |
          bundle exec rake db:create
          bundle exec rake db:schema:load
      - run:
        name: Run test
        command: bundle exec rspec

  code-check:
    docker:
      - image: $CONTAINER_IMAGE:test-$CIRCLE_SHA1
        environment:
          RAILS_ENV: test
          DATABASE_HOST: 127.0.0.1
          DATABASE_USER: root
          DATABASE_PASSWORD: root
    working_directory: $APP_ROOT
    steps:
      - checkout
      - run:
        name: Code check by Rubocop
        command: bundle exec rubocop


workflows:
  workflow:
    jobs:
      - build
      - test:
        requires:
          - build
      - code-check:
        requires:
          - build
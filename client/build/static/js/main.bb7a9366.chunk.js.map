{"version":3,"sources":["components/Header.tsx","screens/HomeScreen.tsx","screens/ShopListScreen.tsx","screens/ShopRegisterScreen.tsx","screens/ShopDetailScreen.tsx","components/atoms/Container.tsx","components/atoms/Title.tsx","components/atoms/Description.tsx","components/atoms/Section.tsx","components/atoms/TextFieldRow.tsx","components/molecules/ImageDropZone.tsx","screens/ProductRegisterScreen.tsx","screens/ProductDetailScreen.tsx","screens/SearchResultScreen.tsx","screens/NotFoundScreen.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","state","searchValue","parse","_this","props","location","search","q","toString","menu","console","log","this","react_default","a","createElement","Background","Title","to","RightContents","Paper","style","paddingLeft","marginLeft","marginRight","display","flex","InputBase","placeholder","value","onChange","handleSearchInput","bind","onKeyDown","handleEnterKey","IconButton","onClick","handleSubmit","Search","handleMenu","Add","Menu","anchorEl","keepMounted","open","Boolean","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","react_router_dom","textDecoration","color","MenuItem","event","setState","target","keyCode","history","push","currentTarget","React","Component","styled","div","_templateObject","Link","_templateObject2","_templateObject3","withRouter","HomeScreen","HomeScreen_Background","HomeScreen_templateObject","ShopListScreen","ShopListScreen_Background","ShopListScreen_templateObject","ShopRegisterScreen","ShopRegisterScreen_Background","ShopRegisterScreen_templateObject","ShopDetailScreen","ShopDetailScreen_Background","ShopDetailScreen_templateObject","Container","Container_templateObject","h2","Title_templateObject","Description","Description_templateObject","Section","Section_templateObject","TextFieldRow","TextFieldRow_templateObject","ImageDropZone","es","onDrop","accept","multiple","_ref","getRootProps","getInputProps","isDragActive","isDragReject","Object","assign","backgroundColor","height","flexDirection","alignItems","justifyContent","images","length","map","image","key","name","ProductRegisterScreen","description","price","shopName","stocks","shopNameSuggestions","acceptedFiles","concat","handleChange","defineProperty","Number","parseInt","handleChangeShopName","handleChangeStock","id","newState","quantity","_this2","atoms_Container","atoms_Section","atoms_Title","atoms_Description","TextField","label","margin","marginTop","maxWidth","multiline","atoms_TextFieldRow","molecules_ImageDropZone","stock","Button","ProductDetailScreen","ProductDetailScreen_Background","ProductDetailScreen_templateObject","SearchResultScreen","SearchResultScreen_Background","SearchResultScreen_templateObject","NotFoundScreen","NotFoundScreen_Background","NotFoundScreen_templateObject","App","components_Header","react_router","exact","path","component","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb7a9366.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Button,\n  IconButton,\n  InputBase,\n  Paper,\n  Link as UILink,\n  MenuItem,\n  Menu\n} from '@material-ui/core'\nimport { Add, Search } from '@material-ui/icons'\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom'\nimport { parse } from 'query-string'\n\ntype Props = RouteComponentProps\n\ninterface State {\n  searchValue: string\n  menu: HTMLButtonElement | null\n}\n\nconst ENTER_KEY = 13\n\nclass Header extends React.Component<Props, State> {\n  public state: State = {\n    searchValue: (parse(this.props.location.search).q || '').toString(),\n    menu: null\n  }\n\n  public render() {\n    console.log(this.state.searchValue)\n    return (\n      <Background>\n        <Title to={'/'}>shutock</Title>\n        <RightContents>\n          <Paper\n            style={{\n              paddingLeft: 10,\n              marginLeft: 10,\n              marginRight: 10,\n              display: 'flex',\n              flex: 1\n            }}\n          >\n            <InputBase\n              placeholder=\"Search…\"\n              value={this.state.searchValue}\n              onChange={this.handleSearchInput.bind(this)}\n              onKeyDown={this.handleEnterKey.bind(this)}\n              style={{ flex: 1 }}\n            />\n            <IconButton onClick={this.handleSubmit.bind(this)}>\n              <Search />\n            </IconButton>\n          </Paper>\n          <IconButton onClick={this.handleMenu.bind(this)}>\n            <Add />\n          </IconButton>\n          <Menu\n            anchorEl={this.state.menu}\n            keepMounted\n            open={Boolean(this.state.menu)}\n            onClose={this.handleClose.bind(this)}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'center'\n            }}\n            getContentAnchorEl={null}\n          >\n            <Link\n              to={'/products/new'}\n              style={{ textDecoration: 'none', color: 'black' }}\n            >\n              <MenuItem>add Product</MenuItem>\n            </Link>\n            <Link\n              to={'/shops/new'}\n              style={{ textDecoration: 'none', color: 'black' }}\n            >\n              <MenuItem>add Shop</MenuItem>\n            </Link>\n          </Menu>\n        </RightContents>\n      </Background>\n    )\n  }\n\n  private handleSearchInput(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ searchValue: event.target.value.toString() })\n  }\n\n  private handleEnterKey(event: React.KeyboardEvent<HTMLInputElement>) {\n    if (event.keyCode === ENTER_KEY) {\n      this.handleSubmit()\n    }\n  }\n\n  private handleSubmit() {\n    if (this.state.searchValue !== '') {\n      this.props.history.push('/search?q=' + this.state.searchValue)\n    }\n  }\n\n  private handleMenu(event: React.MouseEvent<HTMLButtonElement>) {\n    this.setState({ menu: event.currentTarget })\n  }\n\n  private handleClose() {\n    this.setState({ menu: null })\n  }\n}\n\nconst Background = styled.div`\n  height: 60px;\n  background-color: #ccc;\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 0.5em;\n  padding-right: 0.5em;\n`\n\nconst Title = styled(Link)`\n  font-size: 1.8em;\n  font-weight: 200;\n  color: #fff;\n  text-decoration: none;\n`\n\nconst RightContents = styled.div`\n  display: flex;\n  flex: 1;\n  max-width: 400px;\n`\n\nexport default withRouter(Header)\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface Props {}\n\nclass HomeScreen extends React.Component<Props, {}> {\n  public render() {\n    return (\n      <Background>\n        <p>home</p>\n      </Background>\n    )\n  }\n}\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100px;\n`\n\nexport default HomeScreen\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface Props {}\n\nclass ShopListScreen extends React.Component<Props, {}> {\n  public render() {\n    return (\n      <Background>\n        <p>shop list</p>\n      </Background>\n    )\n  }\n}\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100px;\n`\n\nexport default ShopListScreen\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface Props {}\n\nclass ShopRegisterScreen extends React.Component<Props, {}> {\n  public render() {\n    return (\n      <Background>\n        <p>shop new</p>\n      </Background>\n    )\n  }\n}\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100px;\n`\n\nexport default ShopRegisterScreen\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface Props {}\n\nclass ShopDetailScreen extends React.Component<Props, {}> {\n  public render() {\n    return (\n      <Background>\n        <p>shop detail</p>\n      </Background>\n    )\n  }\n}\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100px;\n`\n\nexport default ShopDetailScreen\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  max-width: 700px;\n  height: 100px;\n  margin: 0 auto;\n`\n\nexport default Container\n","import styled from 'styled-components'\n\nconst Title = styled.h2`\n  font-size: 24px;\n  font-weight: normal;\n  margin-top: 3px;\n  margin-bottom: 3px;\n`\n\nexport default Title\n","import styled from 'styled-components'\n\nconst Description = styled.h2`\n  font-size: 14px;\n  font-weight: normal;\n`\n\nexport default Description\n","import styled from 'styled-components'\n\nconst Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding: 10px;\n  border-bottom-width: 1px;\n  border-bottom-color: rgb(225, 228, 232);\n  border-bottom-style: solid;\n`\n\nexport default Section\n","import styled from 'styled-components'\n\nconst TextFieldRow = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nexport default TextFieldRow\n","import React from 'react'\nimport Dropzone, { DropEvent } from 'react-dropzone'\n\ninterface Props {\n  onDrop: (\n    acceptedFiles: File[],\n    rejectedFiles: File[],\n    event: DropEvent\n  ) => void\n  images: File[]\n  multiple: boolean\n}\n\nconst ImageDropZone: React.FC<Props> = props => (\n  <Dropzone\n    onDrop={props.onDrop}\n    accept=\"image/png, image/jpeg\"\n    multiple={props.multiple}\n  >\n    {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n      <div\n        {...getRootProps()}\n        style={{\n          display: 'flex',\n          backgroundColor: '#eee',\n          height: 200,\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}\n      >\n        <input {...getInputProps()} />\n        {!props.images.length && !isDragActive && (\n          <span>クリック or ドラックでアップロード</span>\n        )}\n        {!props.images.length && isDragActive && !isDragReject && (\n          <span>アップロードできます</span>\n        )}\n        {!props.images.length && isDragReject && (\n          <span style={{ color: 'red' }}>対応していないファイルです。</span>\n        )}\n        {Boolean(props.images.length) &&\n          props.images.map(image => <p key={image.name}>{image.name}</p>)}\n      </div>\n    )}\n  </Dropzone>\n)\n\nexport default ImageDropZone\n","import React from 'react'\nimport { Button, TextField } from '@material-ui/core'\nimport Container from '../components/atoms/Container'\nimport Title from '../components/atoms/Title'\nimport Description from '../components/atoms/Description'\nimport Section from '../components/atoms/Section'\nimport TextFieldRow from '../components/atoms/TextFieldRow'\nimport ImageDropZone from '../components/molecules/ImageDropZone'\n\ninterface Suggestion {\n  id: number\n  label: string\n}\n\nconst defaultShopNameSuggestions: Suggestion[] = [\n  { id: 1, label: 'Afghanistan' },\n  { id: 2, label: 'Aland Islands' },\n  { id: 3, label: 'Albania' },\n  { id: 4, label: 'British Indian Ocean Territory' },\n  { id: 5, label: 'Brunei Darussalam' }\n]\n\ninterface Props {}\n\ninterface StockState {\n  shopId: number\n  shopName: string\n  quantity: number\n}\n\ninterface State {\n  name: string\n  description: string\n  price: number | null\n  images: File[]\n  shopName: string\n  stocks: StockState[]\n  shopNameSuggestions: Suggestion[]\n}\n\nclass ProductRegisterScreen extends React.Component<Props, State> {\n  public state: State = {\n    name: '',\n    description: '',\n    price: null,\n    images: [],\n    shopName: '',\n    stocks: [],\n    shopNameSuggestions: []\n  }\n\n  public render() {\n    return (\n      <Container>\n        <Section>\n          <Title>Add New Product</Title>\n          <Description>新しい商品を登録します。</Description>\n        </Section>\n        <Section>\n          <TextField\n            label=\"商品名\"\n            value={this.state.name}\n            onChange={this.handleChange('name').bind(this)}\n            margin=\"normal\"\n            style={{ marginTop: 0, maxWidth: 300 }}\n          />\n          <TextField\n            label=\"説明文\"\n            value={this.state.description}\n            onChange={this.handleChange('description').bind(this)}\n            multiline\n            margin=\"normal\"\n          />\n          <TextFieldRow>\n            <TextField\n              label=\"価格\"\n              value={this.state.price}\n              onChange={this.handleChange('price').bind(this)}\n              margin=\"normal\"\n              style={{ marginTop: 0, maxWidth: 100 }}\n            />\n            <span>円</span>\n          </TextFieldRow>\n        </Section>\n        <Section>\n          <Title>画像アップロード</Title>\n          <Description>複数枚アップロードできます。</Description>\n          <ImageDropZone\n            onDrop={this.onDrop.bind(this)}\n            images={this.state.images}\n            multiple={true}\n          />\n        </Section>\n        <Section>\n          <Title>店舗と在庫</Title>\n          <TextField\n            label=\"店舗名\"\n            value={this.state.shopName}\n            onChange={this.handleChangeShopName.bind(this)}\n            margin=\"normal\"\n            style={{ flex: 1, marginTop: 0, maxWidth: 400, marginRight: 10 }}\n          />\n          {this.state.stocks.map((stock, id) => (\n            <TextFieldRow>\n              <TextField\n                label=\"個数\"\n                value={stock.quantity}\n                onChange={this.handleChangeStock.bind(this)(id)}\n                margin=\"normal\"\n                style={{ flex: 1, marginTop: 0, maxWidth: 100 }}\n              />\n              <span>個</span>\n            </TextFieldRow>\n          ))}\n        </Section>\n        <Section>\n          <Button>保存</Button>\n        </Section>\n      </Container>\n    )\n  }\n\n  private onDrop = (acceptedFiles: File[]) => {\n    this.setState({ images: this.state.images.concat(acceptedFiles) })\n  }\n\n  private handleChange = (key: keyof State) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    if (typeof this.state[key] === 'string') {\n      // @ts-ignore\n      this.setState({ [key]: event.target.value.toString() })\n    }\n    if (typeof this.state[key] === 'number') {\n      // @ts-ignore\n      this.setState({ [key]: Number.parseInt(event.target.value) })\n    }\n  }\n\n  private handleChangeShopName = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    this.setState(() => ({ shopName: event.target.value }))\n    // TODO get Suggests\n  }\n\n  private handleChangeStock = (id: number) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const newState = Object.assign({}, this.state)\n    newState.stocks[id].quantity = Number.parseInt(event.target.value)\n    this.setState(newState)\n  }\n}\n\nexport default ProductRegisterScreen\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface Props {}\n\nclass ProductDetailScreen extends React.Component<Props, {}> {\n  public render() {\n    return (\n      <Background>\n        <p>product detail</p>\n      </Background>\n    )\n  }\n}\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100px;\n`\n\nexport default ProductDetailScreen\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RouteComponentProps } from 'react-router'\n\ntype Props = RouteComponentProps\n\nclass SearchResultScreen extends React.Component<Props, {}> {\n  public render() {\n    return (\n      <Background>\n        <p>aaa</p>\n      </Background>\n    )\n  }\n}\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100px;\n  background-color: red;\n`\n\nexport default SearchResultScreen\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface Props {}\n\nclass NotFoundScreen extends React.Component<Props, {}> {\n  public render() {\n    return (\n      <Background>\n        <p>404 Not Found</p>\n      </Background>\n    )\n  }\n}\nconst Background = styled.div`\n  width: 100%;\n  height: 100px;\n`\n\nexport default NotFoundScreen\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Header from './components/Header'\nimport HomeScreen from './screens/HomeScreen'\nimport ShopListScreen from './screens/ShopListScreen'\nimport ShopRegisterScreen from './screens/ShopRegisterScreen'\nimport ShopDetailScreen from './screens/ShopDetailScreen'\nimport ProductRegisterScreen from './screens/ProductRegisterScreen'\nimport ProductDetailScreen from './screens/ProductDetailScreen'\nimport SearchResultScreen from './screens/SearchResultScreen'\nimport NotFoundScreen from './screens/NotFoundScreen'\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomeScreen} />\n        <Route path=\"/search\" component={SearchResultScreen} />\n        <Route exact path=\"/shops\" component={ShopListScreen} />\n        <Route exact path=\"/shops/new\" component={ShopRegisterScreen} />\n        <Route exact path=\"/shops/:id\" component={ShopDetailScreen} />\n        <Route exact path=\"/products/new\" component={ProductRegisterScreen} />\n        <Route path=\"/products/:id\" component={ProductDetailScreen} />\n        <Route component={NotFoundScreen} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}